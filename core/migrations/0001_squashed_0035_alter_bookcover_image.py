# Generated by Django 5.0.4 on 2024-04-22 21:31

import core.image_helpers
import core.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("core", "0001_initial"),
        ("core", "0002_author_book_bookexperience_bookcover_bookreading"),
        ("core", "0003_alter_bookcover_book"),
        ("core", "0004_author_slug_book_slug"),
        ("core", "0005_alter_author_bio_alter_author_date_of_birth"),
        ("core", "0006_alter_bookcover_image"),
        ("core", "0007_rename_bookexperience_userbook"),
        ("core", "0008_remove_author_date_of_birth_and_more"),
        ("core", "0009_alter_bookreading_book_book_on_hand_book_status_and_more"),
        ("core", "0010_alter_book_published_year"),
        ("core", "0011_bookcover_description"),
        ("core", "0012_booknote"),
        ("core", "0013_rename_content_booknote_text"),
        ("core", "0014_alter_booknote_options"),
        ("core", "0015_alter_bookreading_options"),
        ("core", "0016_alter_bookreading_format"),
        ("core", "0017_alter_book_status"),
        ("core", "0018_bookformat_remove_book_on_hand_and_more"),
        ("core", "0019_alter_book_format"),
        ("core", "0020_book_olid"),
        ("core", "0021_alter_bookcover_options"),
        ("core", "0022_alter_bookcover_image"),
        ("core", "0023_booktype"),
        ("core", "0024_bookformat_description"),
        ("core", "0025_remove_bookformat_description_booktype_description"),
        ("core", "0026_book_type"),
        ("core", "0027_booklocation_book_location"),
        ("core", "0028_bookgenre"),
        ("core", "0029_book_genre"),
        ("core", "0030_book_archived"),
        ("core", "0031_alter_bookcover_options"),
        ("core", "0032_bookcover_thumbnail"),
        ("core", "0033_alter_bookcover_image_alter_bookcover_thumbnail"),
        ("core", "0034_remove_bookcover_thumbnail_alter_bookcover_image"),
        ("core", "0035_alter_bookcover_image"),
    ]

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", core.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("bio", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("slug", models.SlugField(default="", unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("published_year", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("author", models.ManyToManyField(to="core.author")),
                ("slug", models.SlugField(default="", unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("wishlist", "Wishlist"),
                            ("backlog", "Backlog"),
                            ("to-read", "To Read"),
                            ("reading", "Reading"),
                            ("finished", "Finished"),
                            ("dnf", "Did Not Finish"),
                        ],
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BookNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("page", models.PositiveSmallIntegerField(blank=True, null=True)),
                (
                    "percentage",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="core.book",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BookFormat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="BookReading",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("finished", models.BooleanField(default=False)),
                (
                    "rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="readings",
                        to="core.book",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("book", "start_date")},
            },
        ),
        migrations.AddField(
            model_name="book",
            name="format",
            field=models.ManyToManyField(
                blank=True,
                help_text="Choose as many as you have",
                related_name="books",
                to="core.bookformat",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="olid",
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.CreateModel(
            name="BookType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.booktype",
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="books",
                to="core.booktype",
            ),
        ),
        migrations.CreateModel(
            name="BookLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="location",
            field=models.ManyToManyField(
                blank=True, related_name="books", to="core.booklocation"
            ),
        ),
        migrations.CreateModel(
            name="BookGenre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, unique=True)),
                ("slug", models.SlugField(unique=True)),
                ("description", models.CharField(blank=True, max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.bookgenre",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="book",
            name="genre",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="books",
                to="core.bookgenre",
            ),
        ),
        migrations.AddField(
            model_name="book",
            name="archived",
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name="BookCover",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    imagekit.models.fields.ProcessedImageField(
                        upload_to=core.image_helpers.rename_image
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="covers",
                        to="core.book",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="E.g. “First edition,” etc.",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "ordering": ["-updated_at"],
            },
        ),
    ]
